SET 0 # declaring constant 0
STORE 108
SET 2 # declaring constant 2
STORE 111
SET -1 # declaring constant -1
STORE 131
SET 1234567890 # declaring constant 1234567890
STORE 202
SET 1 # declaring constant 1
STORE 100
SET 5 # declaring constant 5
STORE 152
SET 23 # declaring constant 23
STORE 177
JUMP 385 # goto main
LOAD 101
SUB 108
JNEG 3 # to L1
JZERO 2 # to L1
JUMP 11 # goto L2
LOAD 108
SUB 102
STORE 109
LOAD 109 # load {t1 true TEMP 109 false 0 0 0 [] 0 0} into ACC
STORE 102 # store ACC into {built_in_right true DECLARATION 102 false 0 0 0 [] 0 0}
LOAD 108
SUB 101
STORE 110
LOAD 110 # load {t2 true TEMP 110 false 0 0 0 [] 0 0} into ACC
STORE 101 # store ACC into {built_in_left true DECLARATION 101 false 0 0 0 [] 0 0}
LOAD 108 # load {0 false CONSTANT 108 false 0 0 0 [] 0 0} into ACC
STORE 103 # store ACC into {built_in_result true DECLARATION 103 false 0 0 0 [] 0 0}
LOAD 101
HALF
STORE 112
LOAD 112 # load {t3 true TEMP 112 false 0 0 0 [] 0 0} into ACC
STORE 106 # store ACC into {temp true DECLARATION 106 false 0 0 0 [] 0 0}
LOAD 106
ADD 106
STORE 113
LOAD 113 # load {t4 true TEMP 113 false 0 0 0 [] 0 0} into ACC
STORE 106 # store ACC into {temp true DECLARATION 106 false 0 0 0 [] 0 0}
LOAD 106
SUB 101
JPOS 3 # to L5
JNEG 2 # to L5
JUMP 6 # goto L6
LOAD 103
ADD 102
STORE 114
LOAD 114 # load {t5 true TEMP 114 false 0 0 0 [] 0 0} into ACC
STORE 103 # store ACC into {built_in_result true DECLARATION 103 false 0 0 0 [] 0 0}
LOAD 102
ADD 102
STORE 115
LOAD 115 # load {t6 true TEMP 115 false 0 0 0 [] 0 0} into ACC
STORE 102 # store ACC into {built_in_right true DECLARATION 102 false 0 0 0 [] 0 0}
LOAD 101
HALF
STORE 116
LOAD 116 # load {t7 true TEMP 116 false 0 0 0 [] 0 0} into ACC
STORE 101 # store ACC into {built_in_left true DECLARATION 101 false 0 0 0 [] 0 0}
LOAD 101
SUB 108
JZERO 2 # to L4
JUMP -33 # goto L3
RTRN 105 # ret
LOAD 102
SUB 108
JZERO 2 # to L7
JUMP 4 # goto L9
LOAD 108 # load {0 false CONSTANT 108 false 0 0 0 [] 0 0} into ACC
STORE 103 # store ACC into {built_in_result true DECLARATION 103 false 0 0 0 [] 0 0}
JUMP 100 # goto L8
LOAD 101
SUB 108
JNEG 3 # to L10
JZERO 2 # to L10
JUMP 9 # goto L12
LOAD 108
SUB 101
STORE 122
LOAD 122 # load {t8 true TEMP 122 false 0 0 0 [] 0 0} into ACC
STORE 101 # store ACC into {built_in_left true DECLARATION 101 false 0 0 0 [] 0 0}
LOAD 100 # load {1 false CONSTANT 100 false 0 0 0 [] 0 0} into ACC
STORE 120 # store ACC into {result_sign true DECLARATION 120 false 0 0 0 [] 0 0}
JUMP 3 # goto L11
LOAD 108 # load {0 false CONSTANT 108 false 0 0 0 [] 0 0} into ACC
STORE 120 # store ACC into {result_sign true DECLARATION 120 false 0 0 0 [] 0 0}
LOAD 108 # load {0 false CONSTANT 108 false 0 0 0 [] 0 0} into ACC
STORE 103 # store ACC into {built_in_result true DECLARATION 103 false 0 0 0 [] 0 0}
LOAD 100 # load {1 false CONSTANT 100 false 0 0 0 [] 0 0} into ACC
STORE 119 # store ACC into {multiple true DECLARATION 119 false 0 0 0 [] 0 0}
LOAD 102
SUB 108
JNEG 3 # to L13
JZERO 2 # to L13
JUMP 11 # goto L14
LOAD 108
SUB 102
STORE 123
LOAD 123 # load {t9 true TEMP 123 false 0 0 0 [] 0 0} into ACC
STORE 102 # store ACC into {built_in_right true DECLARATION 102 false 0 0 0 [] 0 0}
LOAD 100
SUB 120
STORE 124
LOAD 124 # load {t10 true TEMP 124 false 0 0 0 [] 0 0} into ACC
STORE 120 # store ACC into {result_sign true DECLARATION 120 false 0 0 0 [] 0 0}
LOAD 119
ADD 119
STORE 125
LOAD 125 # load {t11 true TEMP 125 false 0 0 0 [] 0 0} into ACC
STORE 119 # store ACC into {multiple true DECLARATION 119 false 0 0 0 [] 0 0}
LOAD 102
ADD 102
STORE 126
LOAD 126 # load {t12 true TEMP 126 false 0 0 0 [] 0 0} into ACC
STORE 102 # store ACC into {built_in_right true DECLARATION 102 false 0 0 0 [] 0 0}
LOAD 102
SUB 101
JPOS 3 # to L16
JZERO 2 # to L16
JUMP -14 # goto L15
LOAD 101
SUB 102
JPOS 3 # to L19
JZERO 2 # to L19
JUMP 11 # goto L20
LOAD 101
SUB 102
STORE 127
LOAD 127 # load {t13 true TEMP 127 false 0 0 0 [] 0 0} into ACC
STORE 101 # store ACC into {built_in_left true DECLARATION 101 false 0 0 0 [] 0 0}
LOAD 103
ADD 119
STORE 128
LOAD 128 # load {t14 true TEMP 128 false 0 0 0 [] 0 0} into ACC
STORE 103 # store ACC into {built_in_result true DECLARATION 103 false 0 0 0 [] 0 0}
LOAD 102
HALF
STORE 129
LOAD 129 # load {t15 true TEMP 129 false 0 0 0 [] 0 0} into ACC
STORE 102 # store ACC into {built_in_right true DECLARATION 102 false 0 0 0 [] 0 0}
LOAD 119
HALF
STORE 130
LOAD 130 # load {t16 true TEMP 130 false 0 0 0 [] 0 0} into ACC
STORE 119 # store ACC into {multiple true DECLARATION 119 false 0 0 0 [] 0 0}
LOAD 119
SUB 108
JZERO 2 # to L18
JUMP -28 # goto L17
LOAD 120
SUB 108
JPOS 3 # to L21
JNEG 2 # to L21
JUMP 17 # goto L22
LOAD 101
SUB 108
JPOS 3 # to L23
JNEG 2 # to L23
JUMP 7 # goto L25
LOAD 131
SUB 103
STORE 132
LOAD 132 # load {t17 true TEMP 132 false 0 0 0 [] 0 0} into ACC
STORE 103 # store ACC into {built_in_result true DECLARATION 103 false 0 0 0 [] 0 0}
JUMP 6 # goto L24
LOAD 108
SUB 103
STORE 133
LOAD 133 # load {t18 true TEMP 133 false 0 0 0 [] 0 0} into ACC
STORE 103 # store ACC into {built_in_result true DECLARATION 103 false 0 0 0 [] 0 0}
RTRN 118 # ret
LOAD 101
SUB 108
JNEG 3 # to L26
JZERO 2 # to L26
JUMP 9 # goto L28
LOAD 108
SUB 101
STORE 139
LOAD 139 # load {t19 true TEMP 139 false 0 0 0 [] 0 0} into ACC
STORE 101 # store ACC into {built_in_left true DECLARATION 101 false 0 0 0 [] 0 0}
LOAD 100 # load {1 false CONSTANT 100 false 0 0 0 [] 0 0} into ACC
STORE 137 # store ACC into {dividend_sign true DECLARATION 137 false 0 0 0 [] 0 0}
JUMP 3 # goto L27
LOAD 108 # load {0 false CONSTANT 108 false 0 0 0 [] 0 0} into ACC
STORE 137 # store ACC into {dividend_sign true DECLARATION 137 false 0 0 0 [] 0 0}
LOAD 102
SUB 108
JNEG 3 # to L29
JZERO 2 # to L29
JUMP 9 # goto L31
LOAD 108
SUB 102
STORE 140
LOAD 140 # load {t20 true TEMP 140 false 0 0 0 [] 0 0} into ACC
STORE 102 # store ACC into {built_in_right true DECLARATION 102 false 0 0 0 [] 0 0}
LOAD 100 # load {1 false CONSTANT 100 false 0 0 0 [] 0 0} into ACC
STORE 138 # store ACC into {divisor_sign true DECLARATION 138 false 0 0 0 [] 0 0}
JUMP 3 # goto L30
LOAD 108 # load {0 false CONSTANT 108 false 0 0 0 [] 0 0} into ACC
STORE 138 # store ACC into {divisor_sign true DECLARATION 138 false 0 0 0 [] 0 0}
LOAD 102 # load {built_in_right true DECLARATION 102 false 0 0 0 [] 0 0} into ACC
STORE 136 # store ACC into {current_divisor true DECLARATION 136 false 0 0 0 [] 0 0}
LOAD 136
ADD 136
STORE 141
LOAD 141 # load {t21 true TEMP 141 false 0 0 0 [] 0 0} into ACC
STORE 136 # store ACC into {current_divisor true DECLARATION 136 false 0 0 0 [] 0 0}
LOAD 136
SUB 101
JPOS 2 # to L33
JUMP -8 # goto L32
LOAD 136
HALF
STORE 142
LOAD 142 # load {t22 true TEMP 142 false 0 0 0 [] 0 0} into ACC
STORE 136 # store ACC into {current_divisor true DECLARATION 136 false 0 0 0 [] 0 0}
LOAD 101
SUB 136
JPOS 3 # to L36
JZERO 2 # to L36
JUMP 6 # goto L37
LOAD 101
SUB 136
STORE 143
LOAD 143 # load {t23 true TEMP 143 false 0 0 0 [] 0 0} into ACC
STORE 101 # store ACC into {built_in_left true DECLARATION 101 false 0 0 0 [] 0 0}
LOAD 101
SUB 102
JNEG 2 # to L35
JUMP -18 # goto L34
LOAD 101 # load {built_in_left true DECLARATION 101 false 0 0 0 [] 0 0} into ACC
STORE 103 # store ACC into {built_in_result true DECLARATION 103 false 0 0 0 [] 0 0}
LOAD 103
SUB 108
JPOS 3 # to L38
JNEG 2 # to L38
JUMP 21 # goto L39
LOAD 137
SUB 108
JPOS 3 # to L40
JNEG 2 # to L40
JUMP 6 # goto L41
LOAD 102
SUB 103
STORE 144
LOAD 144 # load {t24 true TEMP 144 false 0 0 0 [] 0 0} into ACC
STORE 103 # store ACC into {built_in_result true DECLARATION 103 false 0 0 0 [] 0 0}
LOAD 138
SUB 108
JPOS 3 # to L42
JNEG 2 # to L42
JUMP 6 # goto L43
LOAD 103
SUB 102
STORE 145
LOAD 145 # load {t25 true TEMP 145 false 0 0 0 [] 0 0} into ACC
STORE 103 # store ACC into {built_in_result true DECLARATION 103 false 0 0 0 [] 0 0}
RTRN 135 # ret
LOAD 152 # load {5 false CONSTANT 152 false 0 0 0 [] 0 0} into ACC
STORE 150 # store ACC into {q true DECLARATION 150 false 0 0 0 [] 0 0}
LOAD 100 # load {1 false CONSTANT 100 false 0 0 0 [] 0 0} into ACC
STORE 151 # store ACC into {w true DECLARATION 151 false 0 0 0 [] 0 0}
LOAD 100 # load {1 false CONSTANT 100 false 0 0 0 [] 0 0} into ACC
STORE 153 # store ACC into {i true DECLARATION 153 false 0 0 0 [] 0 0}
JUMP 1 # goto L44
LOAD 153
SUBI 149
JNEG 3 # to L45
JZERO 2 # to L45
JUMP 34 # goto L46
LOAD 151 # load {w false DECLARATION 151 false 0 0 0 [] 0 0} into ACC
STORE 101 # store ACC into {built_in_left true DECLARATION 101 false 0 0 0 [] 0 0}
LOAD 150 # load {q false DECLARATION 150 false 0 0 0 [] 0 0} into ACC
STORE 102 # store ACC into {built_in_right true DECLARATION 102 false 0 0 0 [] 0 0}
SET 281
STORE 105
JUMP -265
LOAD 103 # load {built_in_result true DECLARATION 103 false 0 0 0 [] 0 0} into ACC
STORE 154 # store ACC into {t26 true TEMP 154 false 0 0 0 [] 0 0}
LOAD 154 # load {t26 true TEMP 154 false 0 0 0 [] 0 0} into ACC
STORE 151 # store ACC into {w true DECLARATION 151 false 0 0 0 [] 0 0}
LOAD 151 # load {w false DECLARATION 151 false 0 0 0 [] 0 0} into ACC
STORE 101 # store ACC into {built_in_left true DECLARATION 101 false 0 0 0 [] 0 0}
LOADI 149 # load {n false ARGUMENT 149 false 0 0 0 [] 2 0} into ACC
STORE 102 # store ACC into {built_in_right true DECLARATION 102 false 0 0 0 [] 0 0}
SET 292
STORE 135
JUMP -117
LOAD 103 # load {built_in_result true DECLARATION 103 false 0 0 0 [] 0 0} into ACC
STORE 155 # store ACC into {t27 true TEMP 155 false 0 0 0 [] 0 0}
LOAD 155 # load {t27 true TEMP 155 false 0 0 0 [] 0 0} into ACC
STORE 151 # store ACC into {w true DECLARATION 151 false 0 0 0 [] 0 0}
LOAD 148 # ACC <== Address of t[0]
ADD 153 # add index (i) to ACC
STORE 213 # pc = &t[i]
LOAD 151 # load w into ACC
STOREI 213 # p[pointerCell] <== ACC
LOAD 153
ADD 100
STORE 156
LOAD 156 # load {t28 true TEMP 156 false 0 0 0 [] 0 0} into ACC
STORE 153 # store ACC into {i true DECLARATION 153 false 0 0 0 [] 0 0}
JUMP -37 # goto L44
LOAD 148 # ACC <== Address of t[0]
STORE 213
LOADI 149
ADD 213
STORE 213 # pc = &t[n]
LOAD 108 # load 0 into ACC
STOREI 213 # p[pointerCell] <== ACC
RTRN 147 # ret
LOAD 111 # load {2 false CONSTANT 111 false 0 0 0 [] 0 0} into ACC
STORE 164 # store ACC into {i true DECLARATION 164 false 0 0 0 [] 0 0}
JUMP 1 # goto L47
LOAD 164
SUBI 160
JNEG 3 # to L48
JZERO 2 # to L48
JUMP 57 # goto L49
LOAD 159 # ACC <== Address of t[0]
ADD 164 # add index at address to ACC
LOADI 0 # ACC' <== t[ACC]
STORE 165 # dest <== ACC (src)
LOAD 165 # load {t29 true TEMP 165 false 0 0 0 [] 0 0} into ACC
STORE 161 # store ACC into {x true DECLARATION 161 false 0 0 0 [] 0 0}
LOAD 164 # load {i false DECLARATION 164 false 0 0 0 [] 0 0} into ACC
STORE 162 # store ACC into {j true DECLARATION 162 false 0 0 0 [] 0 0}
LOAD 162
SUB 100
JPOS 2 # to L51
JUMP 34 # goto L52
LOAD 162
SUB 100
STORE 166
LOAD 166 # load {t30 true TEMP 166 false 0 0 0 [] 0 0} into ACC
STORE 163 # store ACC into {k true DECLARATION 163 false 0 0 0 [] 0 0}
LOAD 159 # ACC <== Address of t[0]
ADD 163 # add index at address to ACC
LOADI 0 # ACC' <== t[ACC]
STORE 167 # dest <== ACC (src)
LOAD 167
SUB 161
JPOS 2 # to L53
JUMP 16 # goto L55
LOAD 159 # ACC <== Address of t[0]
ADD 163 # add index at address to ACC
LOADI 0 # ACC' <== t[ACC]
STORE 168 # dest <== ACC (src)
LOAD 159 # ACC <== Address of t[0]
ADD 162 # add index (j) to ACC
STORE 213 # pc = &t[j]
LOAD 168 # load t32 into ACC
STOREI 213 # p[pointerCell] <== ACC
LOAD 162
SUB 100
STORE 169
LOAD 169 # load {t33 true TEMP 169 false 0 0 0 [] 0 0} into ACC
STORE 162 # store ACC into {j true DECLARATION 162 false 0 0 0 [] 0 0}
JUMP 5 # goto L54
LOAD 162 # load {j false DECLARATION 162 false 0 0 0 [] 0 0} into ACC
STORE 163 # store ACC into {k true DECLARATION 163 false 0 0 0 [] 0 0}
LOAD 100 # load {1 false CONSTANT 100 false 0 0 0 [] 0 0} into ACC
STORE 162 # store ACC into {j true DECLARATION 162 false 0 0 0 [] 0 0}
JUMP -36 # goto L50
LOAD 159 # ACC <== Address of t[0]
ADD 163 # add index (k) to ACC
STORE 213 # pc = &t[k]
LOAD 161 # load x into ACC
STOREI 213 # p[pointerCell] <== ACC
LOAD 164
ADD 100
STORE 170
LOAD 170 # load {t34 true TEMP 170 false 0 0 0 [] 0 0} into ACC
STORE 164 # store ACC into {i true DECLARATION 164 false 0 0 0 [] 0 0}
JUMP -60 # goto L47
RTRN 158 # ret
LOAD 100 # load {1 false CONSTANT 100 false 0 0 0 [] 0 0} into ACC
STORE 175 # store ACC into {i true DECLARATION 175 false 0 0 0 [] 0 0}
JUMP 1 # goto L56
LOAD 175
SUBI 174
JNEG 3 # to L57
JZERO 2 # to L57
JUMP 11 # goto L58
LOAD 173 # ACC <== &arg1
ADD 175
LOADI 0 # ACC = val of x[n]
PUT 0 # write x[n]
LOAD 175
ADD 100
STORE 176
LOAD 176 # load {t35 true TEMP 176 false 0 0 0 [] 0 0} into ACC
STORE 175 # store ACC into {i true DECLARATION 175 false 0 0 0 [] 0 0}
JUMP -14 # goto L56
RTRN 172 # ret
LOAD 177 # load {23 false CONSTANT 177 false 0 0 0 [] 0 0} into ACC
STORE 201 # store ACC into {n true DECLARATION 201 false 0 0 0 [] 0 0}
SET 177
STORE 223
SET 201
STORE 224
LOAD 223
STORE 148
LOAD 224
STORE 149
SET 412
STORE 147
JUMP -149
SET 177
STORE 225
SET 201
STORE 226
LOAD 225
STORE 173
LOAD 226
STORE 174
SET 423
STORE 172
JUMP -42
PUT 202
SET 177
STORE 227
SET 201
STORE 228
LOAD 227
STORE 159
LOAD 228
STORE 160
SET 435
STORE 158
JUMP -119
SET 177
STORE 229
SET 201
STORE 230
LOAD 229
STORE 173
LOAD 230
STORE 174
SET 446
STORE 172
JUMP -65
HALT # halt
